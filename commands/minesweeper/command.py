import discord
import logging
import utils.helper as helper
import commands.ext.games as games
from discord.ext import commands
from .grid import GameGrid

logger = logging.getLogger(__name__)


class MinesweeperCommand(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.manager = bot.get_cog('GameManager')

    @commands.check_any(commands.guild_only())
    @commands.command(name="—Å–∞–ø–µ—Ä", help="–∏–≥—Ä–∞")
    async def execute(self, ctx, size: int = 6):
        grid = GameGrid(size)

        embed = discord.Embed(title="–°–∞–ø–µ—Ä", description=str(
            grid), colour=discord.Color.blue())
        embed.add_field(
            name="–ü–æ–º–æ—â—å", value="–î–ª—è —Ö–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–¥ –∫–ª–µ—Ç–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, d4)\n–ß—Ç–æ–±—ã –ø–æ–º–µ—Ç–∏—Ç—å —Ñ–ª–∞–≥–æ–º, –¥–æ–±–∞–≤—å f (–Ω–∞–ø—Ä–∏–º–µ—Ä, d4f)", inline=False)

        message = await ctx.send(embed=embed)
        session = games.GameSession(self.manager, message, 1, 4, 1, grid=grid)
        session.add_handler('on_message', self.on_message)
        session.launch()
        self.manager.add_session(session)

    async def on_message(self, session, message, user):
        grid = session.grid
        guesses = grid.move(message.content)
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –µ—Å–ª–∏ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        session.players.append(games.GamePlayer(user, guesses=0))
        if not guesses:
            return
        elif type(guesses) is int:
            session.players.find(user).guesses += guesses

        await message.delete()

        embed = discord.Embed(
            title="–°–∞–ø–µ—Ä", description="None", colour=discord.Color.blue())

        if not grid.completed:
            embed.add_field(
                name="–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥", value=f"{user.display_name} –¥–µ–ª–∞–µ—Ç —Ö–æ–¥ {message.content.upper()}")
        else:
            session.close()
            if grid.lost:
                embed.add_field(name="–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
                                value="–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! ü§¶", inline=False)
                embed.colour = discord.Color.red()
            else:
                embed.add_field(name="–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
                                value="–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏! ‚úåÔ∏è", inline=False)
                embed.colour = discord.Color.green()
                
            results = ""
            for player in sorted(session.players, key=lambda p: p.guesses, reverse=True):
                results += f"**{player.name}** - {str(player.guesses)} \n"
            embed.add_field(name="–°—á–µ—Ç:", value=results, inline=False)
            
            delta = message.created_at - session.message.created_at
            seconds = round(delta.total_seconds())
            embed.set_footer(text=f"‚è±Ô∏è –í—Ä–µ–º—è: {str(seconds)} —Å–µ–∫.")
        embed.description = str(grid)
        await session.message.edit(embed=embed)

    async def cog_command_error(self, ctx, error):
        if isinstance(error, commands.CheckAnyFailure):
            return await ctx.send(embed=helper.get_error_embed(desc="–ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö"))
        logger.exception(error)


def setup(bot):
    bot.add_cog(MinesweeperCommand(bot))
